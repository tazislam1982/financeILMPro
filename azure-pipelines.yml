trigger:
  branches:
    include: [ main ]
  paths:
    include: [ FInanceilmApiService/** ]

variables:
  # repo layout
  SUBFOLDER: FInanceilmApiService
  DOCKERFILE_PATH: FInanceilmApiService/Dockerfile
  CONTEXT_PATH: FInanceilmApiService

  # connections you created
  AZURE_SUBSCRIPTION: AZURE-RM-SC-finance2       # Azure Resource Manager service connection
  ACR_SC: ACR-SC-finance2                        # Docker Registry (ACR) service connection

  # ACR / image naming
  ACR_NAME: financeilmacr2
  ACR_LOGIN_SERVER: $(ACR_NAME).azurecr.io
  IMAGE_NAME: fInanceilmapiservicev1                          # ACR repo; will be created on first push

  # App Service
  RESOURCE_GROUP: hadi
  WEBAPP_NAME: financeapi2

  # general
  PYTHON_VERSION: '3.11'
  TAG: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build_Test
  displayName: Build & Test (fail fast)
  jobs:
  - job: test
    steps:
    - checkout: self
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(PYTHON_VERSION)

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
      workingDirectory: $(Build.SourcesDirectory)/$(SUBFOLDER)
      displayName: Install deps

    - script: python -m compileall -q .
      workingDirectory: $(Build.SourcesDirectory)/$(SUBFOLDER)
      displayName: Syntax check (compileall)

    - script: |
        if [ -d "tests" ]; then
          pytest -q
        else:
          echo "No tests/ directory; skipping pytest."
        fi
      workingDirectory: $(Build.SourcesDirectory)/$(SUBFOLDER)
      displayName: Run tests

- stage: Build_Push
  displayName: Build & Push image to ACR
  dependsOn: Build_Test
  condition: succeeded()
  jobs:
  - job: docker
    steps:
    - checkout: self

    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(ACR_SC)

    - task: Docker@2
      displayName: Build and push
      inputs:
        command: buildAndPush
        repository: $(ACR_LOGIN_SERVER)/$(IMAGE_NAME)
        Dockerfile: $(Build.SourcesDirectory)/$(DOCKERFILE_PATH)
        buildContext: $(Build.SourcesDirectory)/$(CONTEXT_PATH)
        tags: |
          $(TAG)
          latest

- stage: Deploy
  displayName: Deploy to Azure App Service (Container)
  dependsOn: Build_Push
  condition: succeeded()
  jobs:
  - job: deploy
    steps:
    - task: AzureCLI@2
      displayName: Update container image + app settings
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          set -e
          az webapp config container set \
            -g $(RESOURCE_GROUP) -n $(WEBAPP_NAME) \
            --docker-custom-image-name $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(TAG) \
            --container-registry-url https://$(ACR_LOGIN_SERVER)

          az webapp config appsettings set \
            -g $(RESOURCE_GROUP) -n $(WEBAPP_NAME) \
            --settings WEBSITES_PORT=8000

          az webapp restart -g $(RESOURCE_GROUP) -n $(WEBAPP_NAME)
